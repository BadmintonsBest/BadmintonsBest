{"version":3,"sources":["webpack:///./src/components/content/related-content-factory.js","webpack:///./src/components/content/related-content.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/excerpt.js"],"names":["RelatedContentFactory","articles","currentArticleSlug","this","edges","filter","aArticle","node","fields","slug","maxArticles","categories","tags","_proto","prototype","setMaxArticles","m","setCategories","categoriesArray","setTags","tagsArray","getArticles","identityMap","getSlug","article","addToMap","hasOwnProperty","points","addCategoriesPoints","frontmatter","forEach","aCategory","includes","addTagsPoints","aTag","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","arrayIdentityMap","Object","keys","map","orderBy","splice","RelatedContentContainer","styled_base_browser_esm","target","ExcerptsContainer","BREAKPOINTS","SMALL","rhythm","RelatedContent","core_browser_esm","style","marginTop","i","excerpt","type","variant","key","related_content","props","gatsby_browser_entry","query","render","data","_props$categories","_props$tags","posts","relatedContent","related_content_RelatedContent","_4217602052","BlogPostTemplate","siteUrl","site","siteMetadata","post","markdownRemark","url","location","href","dateModified","parent","mtime","datePublished","date","featuredImgFluid","featured","childImageSharp","fluid","disqusConfig","pathname","identifier","id","title","layout","seo","description","constrain","box","content_header","right_sidebar_layout","main_content","gatsby_image_default","a","marginBottom","adspot","dangerouslySetInnerHTML","__html","html","bio","react_default","Fragment","gatsby_plugin_disqus","config","sidebar","about","React","Component","pageQuery","ExcerptContainer","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Excerpt","_this$props","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_3__","boxShadow","display","to","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default"],"mappings":"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","file":"component---src-templates-blog-post-js-13f3d51fbc20a2753a3b.js","sourcesContent":["// RelatedContentFactory.js\nimport { includes, orderBy } from \"lodash\"\n\nexport class RelatedContentFactory {\n  // (1.) Create by passing in articles, currentSlug\n  constructor(articles, currentArticleSlug) {\n    // (2.) Don't include the current article in articles list\n    this.articles = articles.edges.filter(\n      aArticle => aArticle.node.fields.slug !== currentArticleSlug\n    )\n\n    this.currentArticleSlug = currentArticleSlug\n    // (3.) Set default values\n    this.maxArticles = 3\n    this.categories = []\n    this.tags = []\n  }\n\n  // (4.) Builder pattern usage\n  setMaxArticles(m) {\n    this.maxArticles = m\n    return this\n  }\n\n  setCategories(categoriesArray) {\n    this.categories = categoriesArray\n    return this\n  }\n\n  setTags(tagsArray) {\n    this.tags = tagsArray\n    return this\n  }\n\n  getArticles() {\n    const { categories, tags, articles, maxArticles } = this\n    // (5.) We use an Identity Map to keep track of score\n    const identityMap = {}\n\n    function getSlug(article) {\n      return article.node.fields.slug\n    }\n\n    function addToMap(article) {\n      const slug = getSlug(article)\n      if (!identityMap.hasOwnProperty(slug)) {\n        identityMap[slug] = {\n          article: article,\n          points: 0,\n        }\n      }\n    }\n\n    // // (7.) For category matches, we add 2 points\n    function addCategoriesPoints(article, categories) {\n      const categoryPoints = 2\n      const slug = getSlug(article)\n\n      article.node.frontmatter.categories.forEach(aCategory => {\n        if (includes(categories, aCategory)) {\n          identityMap[slug].points += categoryPoints\n        }\n      })\n    }\n\n    // (8.) For tags matches, we add 1 point\n    function addTagsPoints(article, tags) {\n      const tagPoint = 1\n      const slug = getSlug(article)\n\n      article.node.frontmatter.tags.forEach(aTag => {\n        if (includes(tags, aTag)) {\n          identityMap[slug].points += tagPoint\n        }\n      })\n    }\n\n    function getIdentityMapAsArray() {\n      return Object.keys(identityMap).map(slug => identityMap[slug])\n    }\n\n    // (6.) Map over all articles, add to map and add points\n    for (let article of articles) {\n      addToMap(article)\n\n      if (categories && categories.length > 0) {\n        addCategoriesPoints(article, categories)\n      }\n\n      if (tags && tags.length > 0) {\n        addTagsPoints(article, tags)\n      }\n    }\n\n    // (9.) Convert the identity map to an array\n    const arrayIdentityMap = getIdentityMapAsArray()\n\n    // (10.) Use a lodash utility function to sort them\n    // by points, from greatest to least\n    const similarArticles = orderBy(arrayIdentityMap, [\"points\"], [\"desc\"])\n\n    // (11. Take the max number articles requested)\n    return similarArticles.splice(0, maxArticles)\n  }\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Excerpt from \"../excerpt\"\nimport { RelatedContentFactory } from \"./related-content-factory\"\nimport { rhythm } from \"../../utils/typography\"\nimport { BREAKPOINTS } from \"../../constants/css-vars\"\n\nconst RelatedContentContainer = styled(\"section\")``\n\nconst ExcerptsContainer = styled(\"div\")`\n  @media ${BREAKPOINTS.SMALL} {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-left: -${rhythm(1)};\n\n    & > * {\n      flex: 1 1 50%;\n      margin: 0 !important;\n      padding-left: ${rhythm(1)};\n    }\n  }\n`\n\nconst RelatedContent = ({ articles }) => (\n  <RelatedContentContainer>\n    <h3\n      style={{\n        marginTop: 0,\n      }}\n    >\n      Related Content\n    </h3>\n    <ExcerptsContainer>\n      {articles.map((article, i) => (\n        <Excerpt\n          type=\"blog\"\n          node={article.article.node}\n          variant=\"mini\"\n          key={i}\n        />\n      ))}\n    </ExcerptsContainer>\n  </RelatedContentContainer>\n)\n\n// (1.) Query for articles\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query RelatedContent {\n        posts: allMarkdownRemark(\n          sort: { fields: [frontmatter___date], order: DESC }\n          filter: { frontmatter: { type: { eq: \"blog\" } } }\n          limit: 1000\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                description\n                categories\n                featured {\n                  childImageSharp {\n                    fluid(maxWidth: 700, maxHeight: 465, cropFocus: CENTER) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { currentArticleSlug, categories = [], tags = [] } = props\n\n      // (2.) Marshall the response into articles\n      const articles = data.posts\n\n      // (3.) Use a RelatedContentFactory to get my similar articles\n      const relatedContent = new RelatedContentFactory(\n        articles,\n        currentArticleSlug\n      )\n        .setMaxArticles(2)\n        .setCategories(categories)\n        .setTags(tags)\n        .getArticles()\n\n      // (4.) Render it\n      return <RelatedContent articles={relatedContent} />\n    }}\n  />\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { Disqus } from \"gatsby-plugin-disqus\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nimport About from \"../components/content/about\"\nimport Bio from \"../components/bio\"\nimport RelatedContent from \"../components/content/related-content\"\n\nimport Constrain from \"../components/constrain\"\nimport Box from \"../components/box\"\nimport RightSideBarLayout from \"../components/layouts/right-sidebar-layout\"\nimport MainContent from \"../components/layouts/main-content\"\nimport SideBar from \"../components/layouts/sidebar\"\nimport ContentHeader from \"../components/content-header\"\nimport Adspot from \"../components/adspot\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const siteUrl = this.props.data.site.siteMetadata.siteUrl\n    const post = this.props.data.markdownRemark\n    const slug = post.fields.slug\n    const url = this.props.location.href\n    const categories = post.frontmatter.categories\n    const dateModified = post.parent.mtime\n    const datePublished = post.frontmatter.date\n    const featuredImgFluid = post.frontmatter.featured\n      ? post.frontmatter.featured.childImageSharp.fluid\n      : false\n    const disqusConfig = {\n      url: `${siteUrl + this.props.location.pathname}`,\n      identifier: post.id,\n      title: post.title,\n    }\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          dateModified={dateModified}\n          datePublished={datePublished}\n          url={url}\n        />\n        <Constrain>\n          <Box>\n            <ContentHeader>\n              <h1\n                style={{\n                  marginTop: 0,\n                }}\n              >\n                {post.frontmatter.title}\n              </h1>\n            </ContentHeader>\n            <RightSideBarLayout>\n              <MainContent>\n                {featuredImgFluid && (\n                  <Img\n                    style={{\n                      marginBottom: rhythm(1),\n                    }}\n                    fluid={featuredImgFluid}\n                  />\n                )}\n                <Adspot slug=\"in-content-ad-unit\" />\n                <div dangerouslySetInnerHTML={{ __html: post.html }} />\n                <hr\n                  style={{\n                    marginTop: rhythm(1.5),\n                    marginBottom: rhythm(1.5),\n                  }}\n                />\n                <Bio />\n                {categories.length > 0 && (\n                  <>\n                    <hr\n                      style={{\n                        marginTop: rhythm(1.5),\n                        marginBottom: rhythm(1.5),\n                      }}\n                    />\n                    <RelatedContent\n                      categories={categories}\n                      currentArticleSlug={slug}\n                    />\n                  </>\n                )}\n                <hr\n                  style={{\n                    marginTop: rhythm(1.5),\n                    marginBottom: rhythm(1.5),\n                  }}\n                />\n                <Disqus config={disqusConfig} />\n              </MainContent>\n              <SideBar>\n                <Adspot slug=\"sidebar-unit\" />\n                <About />\n              </SideBar>\n            </RightSideBarLayout>\n          </Box>\n        </Constrain>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n        featured {\n          childImageSharp {\n            fluid(maxWidth: 700) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      parent {\n        ... on File {\n          mtime(formatString: \"YYYY-MM-DD\")\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styled from \"@emotion/styled\"\nimport { rhythm } from \"../utils/typography\"\n\nconst ExcerptContainer = styled(\"div\")`\n  & + & {\n    margin-top: ${rhythm(2)};\n  }\n`\n\nclass Excerpt extends React.Component {\n  render() {\n    const { node, variant } = this.props\n    const title = node.frontmatter.title || node.fields.slug\n    const featuredImgFluid = node.frontmatter.featured\n      ? node.frontmatter.featured.childImageSharp.fluid\n      : false\n\n    return (\n      <ExcerptContainer>\n        {featuredImgFluid && (\n          <Link\n            style={{\n              boxShadow: `none`,\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n            to={node.fields.slug}\n          >\n            <Img fluid={featuredImgFluid} />\n          </Link>\n        )}\n        {variant && variant === \"mini\" ? (\n          <h4\n            style={{\n              marginTop: 0,\n            }}\n          >\n            <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n              {title}\n            </Link>\n          </h4>\n        ) : (\n          <h2\n            style={{\n              marginTop: 0,\n            }}\n          >\n            <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n              {title}\n            </Link>\n          </h2>\n        )}\n        <p\n          dangerouslySetInnerHTML={{\n            __html: node.frontmatter.description || node.excerpt,\n          }}\n          style={{\n            marginBottom: 0,\n          }}\n        />\n      </ExcerptContainer>\n    )\n  }\n}\n\nexport default Excerpt\n"],"sourceRoot":""}