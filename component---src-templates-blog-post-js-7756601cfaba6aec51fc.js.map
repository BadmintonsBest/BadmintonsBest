{"version":3,"sources":["webpack:///./src/components/content/related-content-factory.js","webpack:///./src/components/content/related-content.js","webpack:///./src/templates/blog-post.js","webpack:///./src/components/content-header.js","webpack:///./src/components/excerpt.js","webpack:///./src/components/bio.js","webpack:///./src/components/attribution.js"],"names":["RelatedContentFactory","articles","currentArticleSlug","this","edges","filter","aArticle","node","fields","slug","maxArticles","categories","tags","_proto","prototype","setMaxArticles","m","setCategories","categoriesArray","setTags","tagsArray","getArticles","identityMap","getSlug","article","addToMap","hasOwnProperty","points","addCategoriesPoints","frontmatter","forEach","aCategory","includes","addTagsPoints","aTag","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref","length","next","done","value","arrayIdentityMap","Object","keys","map","orderBy","splice","RelatedContentContainer","styled_base_browser_esm","target","ExcerptsContainer","BREAKPOINTS","SMALL","rhythm","RelatedContent","core_browser_esm","style","marginTop","i","excerpt","type","variant","dataGtm","RELATED_CONTENT_LINK","key","related_content","props","gatsby_browser_entry","query","render","data","_props$categories","_props$tags","posts","relatedContent","related_content_RelatedContent","_1487004291","BlogPostTemplate","siteUrl","site","siteMetadata","post","mdx","url","location","href","dateModified","parent","mtime","datePublished","date","featuredImgAlt","featuredalt","featuredImgAttribution","featured_attribute","featuredImgFluid","featured","childImageSharp","fluid","featuredImgFluidSocial","featuredSocial","disqusConfig","pathname","identifier","id","title","layout","seo","description","image","schemaType","constrain","box","content_header","right_sidebar_layout","main_content","marginBottom","gatsby_image_default","a","alt","attribution","content","gatsby_plugin_mdx","body","bio","react_default","Fragment","gatsby_plugin_disqus","config","sidebar","about","React","Component","pageQuery","ContentHeader","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","BRAND_PRIMARY","ExcerptContainer","Excerpt","_this$props","_this$props$dataGtm","isRelatedContent","_emotion_core__WEBPACK_IMPORTED_MODULE_5__","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","display","to","data-gtm","data-gtm-click-text","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","dangerouslySetInnerHTML","__html","Bio","_public_static_d_1509195349_json__WEBPACK_IMPORTED_MODULE_1__","author","fixed","avatar","marginRight","minWidth","borderRadius","imgStyle","AttributionParagraph","Attribution","_emotion_core__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-templates-blog-post-js-7756601cfaba6aec51fc.js","sourcesContent":["// RelatedContentFactory.js\nimport { includes, orderBy } from \"lodash\"\n\nexport class RelatedContentFactory {\n  // (1.) Create by passing in articles, currentSlug\n  constructor(articles, currentArticleSlug) {\n    // (2.) Don't include the current article in articles list\n    this.articles = articles.edges.filter(\n      aArticle => aArticle.node.fields.slug !== currentArticleSlug\n    )\n\n    this.currentArticleSlug = currentArticleSlug\n    // (3.) Set default values\n    this.maxArticles = 3\n    this.categories = []\n    this.tags = []\n  }\n\n  // (4.) Builder pattern usage\n  setMaxArticles(m) {\n    this.maxArticles = m\n    return this\n  }\n\n  setCategories(categoriesArray) {\n    this.categories = categoriesArray\n    return this\n  }\n\n  setTags(tagsArray) {\n    this.tags = tagsArray\n    return this\n  }\n\n  getArticles() {\n    const { categories, tags, articles, maxArticles } = this\n    // (5.) We use an Identity Map to keep track of score\n    const identityMap = {}\n\n    function getSlug(article) {\n      return article.node.fields.slug\n    }\n\n    function addToMap(article) {\n      const slug = getSlug(article)\n      if (!identityMap.hasOwnProperty(slug)) {\n        identityMap[slug] = {\n          article: article,\n          points: 0,\n        }\n      }\n    }\n\n    // // (7.) For category matches, we add 2 points\n    function addCategoriesPoints(article, categories) {\n      const categoryPoints = 2\n      const slug = getSlug(article)\n\n      article.node.frontmatter.categories.forEach(aCategory => {\n        if (includes(categories, aCategory)) {\n          identityMap[slug].points += categoryPoints\n        }\n      })\n    }\n\n    // (8.) For tags matches, we add 1 point\n    function addTagsPoints(article, tags) {\n      const tagPoint = 1\n      const slug = getSlug(article)\n\n      article.node.frontmatter.tags.forEach(aTag => {\n        if (includes(tags, aTag)) {\n          identityMap[slug].points += tagPoint\n        }\n      })\n    }\n\n    function getIdentityMapAsArray() {\n      return Object.keys(identityMap).map(slug => identityMap[slug])\n    }\n\n    // (6.) Map over all articles, add to map and add points\n    for (let article of articles) {\n      addToMap(article)\n\n      if (categories && categories.length > 0) {\n        addCategoriesPoints(article, categories)\n      }\n\n      if (tags && tags.length > 0) {\n        addTagsPoints(article, tags)\n      }\n    }\n\n    // (9.) Convert the identity map to an array\n    const arrayIdentityMap = getIdentityMapAsArray()\n\n    // (10.) Use a lodash utility function to sort them\n    // by points, from greatest to least\n    const similarArticles = orderBy(arrayIdentityMap, [\"points\"], [\"desc\"])\n\n    // (11. Take the max number articles requested)\n    return similarArticles.splice(0, maxArticles)\n  }\n}\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Excerpt from \"../excerpt\"\nimport { RelatedContentFactory } from \"./related-content-factory\"\nimport { rhythm } from \"../../utils/typography\"\nimport { BREAKPOINTS } from \"../../constants/css-vars\"\nimport { RELATED_CONTENT_LINK } from \"../../constants/gtm\"\n\nconst RelatedContentContainer = styled(\"section\")``\n\nconst ExcerptsContainer = styled(\"div\")`\n  @media ${BREAKPOINTS.SMALL} {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-left: -${rhythm(1)};\n\n    & > * {\n      flex: 1 1 50%;\n      margin: 0 !important;\n      padding-left: ${rhythm(1)};\n    }\n  }\n`\n\nconst RelatedContent = ({ articles }) => (\n  <RelatedContentContainer>\n    <h3\n      style={{\n        marginTop: 0,\n      }}\n    >\n      Related Content\n    </h3>\n    <ExcerptsContainer>\n      {articles.map((article, i) => (\n        <Excerpt\n          type=\"blog\"\n          node={article.article.node}\n          variant=\"mini\"\n          dataGtm={RELATED_CONTENT_LINK}\n          key={i}\n        />\n      ))}\n    </ExcerptsContainer>\n  </RelatedContentContainer>\n)\n\n// (1.) Query for articles\nexport default props => (\n  <StaticQuery\n    query={graphql`\n      query RelatedContent {\n        posts: allMdx(\n          sort: { fields: [frontmatter___date], order: DESC }\n          filter: { frontmatter: { type: { eq: \"blog\" } } }\n          limit: 1000\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                description\n                categories\n                featured {\n                  childImageSharp {\n                    fluid(maxWidth: 700, maxHeight: 465, cropFocus: CENTER) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const { currentArticleSlug, categories = [], tags = [] } = props\n\n      // (2.) Marshall the response into articles\n      const articles = data.posts\n\n      // (3.) Use a RelatedContentFactory to get my similar articles\n      const relatedContent = new RelatedContentFactory(\n        articles,\n        currentArticleSlug\n      )\n        .setMaxArticles(2)\n        .setCategories(categories)\n        .setTags(tags)\n        .getArticles()\n\n      // (4.) Render it\n      return <RelatedContent articles={relatedContent} />\n    }}\n  />\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { Disqus } from \"gatsby-plugin-disqus\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nimport About from \"../components/content/about\"\nimport Bio from \"../components/bio\"\nimport RelatedContent from \"../components/content/related-content\"\n\nimport Attribution from \"../components/attribution\"\nimport Constrain from \"../components/constrain\"\nimport Box from \"../components/box\"\nimport RightSideBarLayout from \"../components/layouts/right-sidebar-layout\"\nimport MainContent from \"../components/layouts/main-content\"\nimport SideBar from \"../components/layouts/sidebar\"\nimport ContentHeader from \"../components/content-header\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const siteUrl = this.props.data.site.siteMetadata.siteUrl\n    const post = this.props.data.mdx\n    const slug = post.fields.slug\n    const url = this.props.location.href\n    const categories = post.frontmatter.categories\n    const dateModified = post.parent.mtime\n    const datePublished = post.frontmatter.date\n    const featuredImgAlt = post.frontmatter.featuredalt\n    const featuredImgAttribution = post.frontmatter.featured_attribute\n    const featuredImgFluid = post.frontmatter.featured\n      ? post.frontmatter.featured.childImageSharp.fluid\n      : null\n    const featuredImgFluidSocial = post.frontmatter.featuredSocial\n      ? post.frontmatter.featuredSocial.childImageSharp.fluid\n      : null\n    const disqusConfig = {\n      url: `${siteUrl + this.props.location.pathname}`,\n      identifier: post.id,\n      title: post.title,\n    }\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          dateModified={dateModified}\n          datePublished={datePublished}\n          image={featuredImgFluidSocial}\n          schemaType=\"BlogPosting\"\n          url={url}\n        />\n        <Constrain>\n          <Box>\n            <ContentHeader>\n              <h1\n                style={{\n                  marginTop: 0,\n                }}\n              >\n                {post.frontmatter.title}\n              </h1>\n            </ContentHeader>\n            <RightSideBarLayout>\n              <MainContent>\n                {featuredImgFluid && (\n                  <figure\n                    style={{\n                      marginBottom: rhythm(1),\n                    }}\n                  >\n                    <Img\n                      style={{\n                        marginBottom: rhythm(0.25),\n                      }}\n                      fluid={featuredImgFluid}\n                      alt={featuredImgAlt}\n                    />\n                    {featuredImgAttribution && (\n                      <Attribution content={featuredImgAttribution} />\n                    )}\n                  </figure>\n                )}\n                <MDXRenderer>{post.body}</MDXRenderer>\n                <hr\n                  style={{\n                    marginTop: rhythm(1.5),\n                    marginBottom: rhythm(1.5),\n                  }}\n                />\n                <Bio />\n                {categories.length > 0 && (\n                  <>\n                    <hr\n                      style={{\n                        marginTop: rhythm(1.5),\n                        marginBottom: rhythm(1.5),\n                      }}\n                    />\n                    <RelatedContent\n                      categories={categories}\n                      currentArticleSlug={slug}\n                    />\n                  </>\n                )}\n                <hr\n                  style={{\n                    marginTop: rhythm(1.5),\n                    marginBottom: rhythm(1.5),\n                  }}\n                />\n                <Disqus config={disqusConfig} />\n              </MainContent>\n              <SideBar>\n                <About />\n              </SideBar>\n            </RightSideBarLayout>\n          </Box>\n        </Constrain>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        categories\n        featuredalt\n        featured_attribute\n        featured {\n          childImageSharp {\n            fluid(maxWidth: 700) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        featuredSocial: featured {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 675, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      parent {\n        ... on File {\n          mtime(formatString: \"YYYY-MM-DD\")\n        }\n      }\n    }\n  }\n`\n","import styled from \"@emotion/styled\"\n\nimport { rhythm } from \"../utils/typography\"\nimport { BRAND_PRIMARY } from \"../constants/css-vars\"\n\nconst ContentHeader = styled(\"header\")`\n  position: relative;\n\n  margin-bottom: ${rhythm(1.5)};\n  padding-bottom: ${rhythm(1.5)};\n\n  &::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    display: inline-block;\n    height: 2px;\n    width: 10em;\n    max-width: 100%;\n\n    background-color: ${BRAND_PRIMARY};\n\n    content: \"\";\n    opacity: 0.5;\n  }\n\n  *:first-child {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  *:last-child {\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n`\n\nexport default ContentHeader\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport styled from \"@emotion/styled\"\nimport { rhythm } from \"../utils/typography\"\n\nconst ExcerptContainer = styled(\"div\")`\n  & + & {\n    margin-top: ${rhythm(2)};\n  }\n`\n\nclass Excerpt extends React.Component {\n  render() {\n    const { dataGtm = \"\", node, variant } = this.props\n    const title = node.frontmatter.title || node.fields.slug\n    const featuredImgFluid = node.frontmatter.featured\n      ? node.frontmatter.featured.childImageSharp.fluid\n      : false\n\n    const isRelatedContent = variant && variant === \"mini\" ? true : false\n\n    return (\n      <ExcerptContainer>\n        {featuredImgFluid && (\n          <Link\n            style={{\n              boxShadow: `none`,\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n            to={node.fields.slug}\n            data-gtm={dataGtm}\n            data-gtm-click-text={title}\n          >\n            <Img fluid={featuredImgFluid} />\n          </Link>\n        )}\n        {isRelatedContent ? (\n          <h4\n            style={{\n              marginTop: 0,\n            }}\n          >\n            <Link\n              style={{ boxShadow: `none` }}\n              to={node.fields.slug}\n              data-gtm={dataGtm}\n            >\n              {title}\n            </Link>\n          </h4>\n        ) : (\n          <h2\n            style={{\n              marginTop: 0,\n            }}\n          >\n            <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n              {title}\n            </Link>\n          </h2>\n        )}\n        <p\n          dangerouslySetInnerHTML={{\n            __html: node.frontmatter.description || node.excerpt,\n          }}\n          style={{\n            marginBottom: 0,\n          }}\n        />\n      </ExcerptContainer>\n    )\n  }\n}\n\nexport default Excerpt\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n\n  return (\n    <div\n      style={{\n        display: `flex`,\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p style={{ marginBottom: 0 }}>\n        Written by <strong>{author}</strong> who lives in Manchester, England.\n        Working as a Software Engineer but moonlighting as a dad, Badminton\n        player/coach and creator of BadmintonsBest.\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport styled from \"@emotion/styled\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst AttributionParagraph = styled(\"p\")`\n  display: block;\n\n  p {\n    display: inline;\n    font-size: ${rhythm(0.5)} !important;\n  }\n\n  img {\n    display: inline-block;\n    margin-bottom: 0;\n  }\n`\n\nconst Attribution = ({ content }) => (\n  <AttributionParagraph>\n    <em dangerouslySetInnerHTML={{ __html: `Image credit: ${content}` }} />\n  </AttributionParagraph>\n)\n\nexport default Attribution\n"],"sourceRoot":""}