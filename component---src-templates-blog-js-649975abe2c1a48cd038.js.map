{"version":3,"sources":["webpack:///./src/components/ui/paginaton.js","webpack:///./src/templates/blog.js","webpack:///./src/components/content-header.js"],"names":["Pagination","Object","styled_base_browser_esm","target","rhythm","BlogTemplate","render","siteTitle","this","props","data","site","siteMetadata","title","siteDescription","description","posts","allMdx","edges","url","location","href","_this$props$pageConte","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","core_browser_esm","layout","seo","constrain","box","content_header","style","marginTop","marginBottom","right_sidebar_layout","main_content","map","_ref","node","excerpt","key","fields","slug","type","paginaton","button_link","to","className","rel","sidebar","about","React","Component","pageQuery","ContentHeader","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","BRAND_PRIMARY"],"mappings":"qPAaeA,EATIC,OAAAC,EAAA,EAAAD,CAAO,MAAP,CAAAE,OAAA,aAAAF,CAAH,gHAMAG,YAAO,GANP,wDCcVC,kLACJC,OAAA,WACE,IAAMC,EAAYC,KAAKC,MAAMC,KAAKC,KAAKC,aAAaC,MAC9CC,EAAkBN,KAAKC,MAAMC,KAAKC,KAAKC,aAAaG,YACpDC,EAAQR,KAAKC,MAAMC,KAAKO,OAAOC,MAC/BC,EAAMX,KAAKC,MAAMW,SAASC,KAJzBC,EAM2Bd,KAAKC,MAAMc,YAArCC,EANDF,EAMCE,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IARRF,EAMcK,SAGfC,EACJJ,EAAc,GAAM,EAChB,QADJ,eAEmBA,EAAc,GAAGK,WAChCC,EAAQ,eAAkBN,EAAc,GAAGK,WAEjD,OACE5B,OAAA8B,EAAA,EAAA9B,CAAC+B,EAAA,EAAD,CAAQZ,SAAUZ,KAAKC,MAAMW,UAC3BnB,OAAA8B,EAAA,EAAA9B,CAACgC,EAAA,EAAD,CAAKpB,MAAON,EAAWQ,YAAaD,EAAiBK,IAAKA,IAC1DlB,OAAA8B,EAAA,EAAA9B,CAACiC,EAAA,EAAD,KACEjC,OAAA8B,EAAA,EAAA9B,CAACkC,EAAA,EAAD,KACElC,OAAA8B,EAAA,EAAA9B,CAACmC,EAAA,EAAD,KACEnC,OAAA8B,EAAA,EAAA9B,CAAA,MACEoC,MAAO,CACLC,UAAW,EACXC,aAAc,IAHlB,SASFtC,OAAA8B,EAAA,EAAA9B,CAACuC,EAAA,EAAD,KACEvC,OAAA8B,EAAA,EAAA9B,CAACwC,EAAA,EAAD,KACGzB,EAAM0B,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACZ,OACE3C,OAAA8B,EAAA,EAAA9B,CAAC4C,EAAA,EAAD,CAASC,IAAKF,EAAKG,OAAOC,KAAMC,KAAK,OAAOL,KAAMA,MAItD3C,OAAA8B,EAAA,EAAA9B,CAACiD,EAAD,MACIzB,GACAxB,OAAA8B,EAAA,EAAA9B,CAACkD,EAAA,EAAD,CACEC,GAAIxB,EACJyB,UAAU,kBACVC,IAAI,QAHN,kBAQA5B,GACAzB,OAAA8B,EAAA,EAAA9B,CAACkD,EAAA,EAAD,CACEC,GAAItB,EACJuB,UAAU,kBACVC,IAAI,QAHN,mBAUNrD,OAAA8B,EAAA,EAAA9B,CAACsD,EAAA,EAAD,KACEtD,OAAA8B,EAAA,EAAA9B,CAACuD,EAAA,EAAD,eA7DWC,IAAMC,WAyEpBC,GAFEtD,YAEO,+ECtFhBuD,EAAgB3D,OAAA4D,EAAA,EAAA5D,CAAO,SAAP,CAAAE,OAAA,YAAAF,CAAH,mCAGAG,YAAO,KAHP,mBAICA,YAAO,KAJR,0HAgBK0D,IAhBL,sHAiCJF","file":"component---src-templates-blog-js-649975abe2c1a48cd038.js","sourcesContent":["import styled from \"@emotion/styled\"\n\nimport { rhythm } from \"../../utils/typography\"\n\nconst Pagination = styled(\"nav\")`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${rhythm(2)};\n`\n\nexport default Pagination\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport ButtonLink from \"../components/ui/button-link\"\nimport About from \"../components/content/about\"\n\nimport Constrain from \"../components/constrain\"\nimport Box from \"../components/box\"\nimport RightSideBarLayout from \"../components/layouts/right-sidebar-layout\"\nimport MainContent from \"../components/layouts/main-content\"\nimport SideBar from \"../components/layouts/sidebar\"\nimport ContentHeader from \"../components/content-header\"\nimport Excerpt from \"../components/excerpt\"\nimport Pagination from \"../components/ui/paginaton\"\n\nclass BlogTemplate extends React.Component {\n  render() {\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const siteDescription = this.props.data.site.siteMetadata.description\n    const posts = this.props.data.allMdx.edges\n    const url = this.props.location.href\n\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage =\n      currentPage - 1 === 1\n        ? \"/blog\"\n        : `/blog/page/${(currentPage - 1).toString()}`\n    const nextPage = `/blog/page/${(currentPage + 1).toString()}`\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO title={siteTitle} description={siteDescription} url={url} />\n        <Constrain>\n          <Box>\n            <ContentHeader>\n              <h1\n                style={{\n                  marginTop: 0,\n                  marginBottom: 0,\n                }}\n              >\n                Blog\n              </h1>\n            </ContentHeader>\n            <RightSideBarLayout>\n              <MainContent>\n                {posts.map(({ node }) => {\n                  return (\n                    <Excerpt key={node.fields.slug} type=\"blog\" node={node} />\n                  )\n                })}\n\n                <Pagination>\n                  {!isFirst && (\n                    <ButtonLink\n                      to={prevPage}\n                      className=\"pagination-link\"\n                      rel=\"prev\"\n                    >\n                      ← Newer Posts\n                    </ButtonLink>\n                  )}\n                  {!isLast && (\n                    <ButtonLink\n                      to={nextPage}\n                      className=\"pagination-link\"\n                      rel=\"next\"\n                    >\n                      Older Posts →\n                    </ButtonLink>\n                  )}\n                </Pagination>\n              </MainContent>\n              <SideBar>\n                <About />\n              </SideBar>\n            </RightSideBarLayout>\n          </Box>\n        </Constrain>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogTemplate\n\nexport const pageQuery = graphql`\n  query Blogs($skip: Int!, $limit: Int!, $type: String) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { type: { eq: $type } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            featured {\n              childImageSharp {\n                fluid(maxWidth: 700, maxHeight: 465, cropFocus: CENTER) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import styled from \"@emotion/styled\"\n\nimport { rhythm } from \"../utils/typography\"\nimport { BRAND_PRIMARY } from \"../constants/css-vars\"\n\nconst ContentHeader = styled(\"header\")`\n  position: relative;\n\n  margin-bottom: ${rhythm(1.5)};\n  padding-bottom: ${rhythm(1.5)};\n\n  &::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n\n    display: inline-block;\n    height: 2px;\n    width: 10em;\n    max-width: 100%;\n\n    background-color: ${BRAND_PRIMARY};\n\n    content: \"\";\n    opacity: 0.5;\n  }\n\n  *:first-child {\n    margin-top: 0;\n    padding-top: 0;\n  }\n\n  *:last-child {\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n`\n\nexport default ContentHeader\n"],"sourceRoot":""}